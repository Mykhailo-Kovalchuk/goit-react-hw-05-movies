{"version":3,"file":"static/js/392.c50a53d0.chunk.js","mappings":"qPACA,EAAgC,4BAAhC,EAAuE,uBAAvE,EAA6G,2BAA7G,EAAoJ,wB,SC2CpJ,EAtCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAGRE,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,IAElCI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACcC,EAAAA,EAAAA,GAAUlB,GAAS,KAAD,EAAxCc,EAAaC,EAAAI,KAEnBZ,EAAeO,GAAe,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,KAC/B,kBAJY,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAMbb,GACF,GAAG,CAACT,IACJuB,QAAQC,MAER,IAAMC,EAAkB,OAAXnB,QAAW,IAAXA,OAAW,EAAXA,EAAaoB,KACxB,SAAAC,GAAqD,IAAlDC,EAAED,EAAFC,GAAIC,EAAaF,EAAbE,cAAeC,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAC5BC,EAAK,kCAAAC,OAAqCH,GAEhD,OACEI,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAiBC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKP,EAAOQ,IAAI,iBAAiBL,UAAWC,KAChDE,EAAAA,EAAAA,KAAA,MAAAD,SAAKR,KACLK,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,SAAON,OAHHH,EAMb,IAGF,OACEU,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAkBC,UAChCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAEZ,KAGpC,C","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"cast_castContainer__RvD4o\",\"castList\":\"cast_castList__yD6XP\",\"castListItem\":\"cast_castListItem__CRYDj\",\"castImage\":\"cast_castImage__+qEjt\"};","import React from 'react';\nimport { fetchCast } from '../../services-functions/api-movies';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport css from './cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  // console.log(movieId);\n\n  const [castDetails, setCastDetails] = useState([]);\n\n  useEffect(() => {\n    const details = async () => {\n      const responseFetch = await fetchCast(movieId);\n      // console.log(responseFetch);\n      setCastDetails(responseFetch);\n    };\n\n    details();\n  }, [movieId]);\n  console.log();\n\n  const cast = castDetails?.map(\n    ({ id, original_name, profile_path, character }) => {\n      const photo = `https://image.tmdb.org/t/p/w300${profile_path}`;\n\n      return (\n        <li key={id} className={css.castListItem}>\n         <img src={photo} alt=\"No_Actor_Photo\" className={css.castImage}/>\n          <h4>{original_name}</h4>\n          <p>Role: {character}</p>\n        </li>\n      );\n    }\n  );\n\n  return (\n    <div className={css.castContainer}>\n      <ul className={css.castList}>{cast}</ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","castDetails","setCastDetails","useEffect","details","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","responseFetch","_context","prev","next","fetchCast","sent","stop","apply","arguments","console","log","cast","map","_ref2","id","original_name","profile_path","character","photo","concat","_jsxs","className","css","children","_jsx","src","alt"],"sourceRoot":""}