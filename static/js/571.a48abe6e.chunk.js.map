{"version":3,"file":"static/js/571.a48abe6e.chunk.js","mappings":"sPACA,EAAmC,kCAAnC,EAAmF,6BAAnF,EAAgI,+BAAhI,EAA6K,6BAA7K,EAAyN,8B,SC4CzN,EAvCgB,WACd,IACQA,GAAYC,EAAAA,EAAAA,MAAZD,QAGRE,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,IAExCI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACcC,EAAAA,EAAAA,IAAalB,GAAS,KAAD,EAA3Cc,EAAaC,EAAAI,KAEnBZ,EAAkBO,GAAe,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,KAClC,kBAJY,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAMbb,GACF,GAAG,CAACT,IACJuB,QAAQC,MAER,IAAMC,EAAwB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoB,KAC9B,SAAAC,GAA+D,IAA5DC,EAAED,EAAFC,GAAIC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAA0BC,EAAWJ,EAA7BK,eAAkBD,YAClCE,EAAK,kCAAAC,OAAqCH,GAEhD,OACEI,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAgBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKC,IAAqB,OAAhBT,EAvBC,8EAuBmCE,EAAOQ,IAAI,kBAAkBL,UAAWC,KACtFE,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAkBC,SAAER,KACnCS,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAgBC,SAAET,MAHzBD,EAMb,IAGF,OACEW,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAqBC,SAClCb,GAGP,C","sources":["webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"reviews_reviewsContainer__kxpyD\",\"reviewsList\":\"reviews_reviewsList__w60+q\",\"reviewsAuthor\":\"reviews_reviewsAuthor__0u3-7\",\"reviewsText\":\"reviews_reviewsText__u1Jyh\",\"reviewsImage\":\"reviews_reviewsImage__dlB9h\"};","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../services-functions/api-movies';\nimport { useEffect, useState } from 'react';\nimport css from './reviews.module.css'\n\nconst Reviews = () => {\n  const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const { movieId } = useParams();\n  // console.log(movieId);\n\n  const [reviewsDetails, setReviewsDetails] = useState([]);\n\n  useEffect(() => {\n    const details = async () => {\n      const responseFetch = await fetchReviews(movieId);\n      // console.log(responseFetch);\n      setReviewsDetails(responseFetch);\n    };\n\n    details();\n  }, [movieId]);\n  console.log();\n\n  const reviews = reviewsDetails?.map(\n    ({ id, content, author, author_details: { avatar_path } }) => {\n      const photo = `https://image.tmdb.org/t/p/w300${avatar_path}`;\n\n      return (\n        <li key={id} className={css.reviewsList}>\n          <img src={avatar_path === null ? defaultImg : photo} alt=\"No_Author_Photo\" className={css.reviewsImage}/>\n          <h4 className={css.reviewsAuthor}>{author}</h4>\n          <p className={css.reviewsText}>{content}</p>\n        </li>\n      );\n    }\n  );\n\n  return (\n    <div className={css.reviewsContainer}>\n      {reviews}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviewsDetails","setReviewsDetails","useEffect","details","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","responseFetch","_context","prev","next","fetchReviews","sent","stop","apply","arguments","console","log","reviews","map","_ref2","id","content","author","avatar_path","author_details","photo","concat","_jsxs","className","css","children","_jsx","src","alt"],"sourceRoot":""}